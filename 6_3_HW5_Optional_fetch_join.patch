Index: src/main/java/ru/javawebinar/topjava/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/model/User.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/model/User.java	(revision )
@@ -8,6 +8,7 @@
 import javax.validation.constraints.Digits;
 import java.util.Date;
 import java.util.EnumSet;
+import java.util.List;
 import java.util.Set;
 
 /**
@@ -55,6 +56,10 @@
     @Digits(fraction = 0, integer = 4)
     protected int caloriesPerDay = DEFAULT_CALORIES_PER_DAY;
 
+    @OneToMany(cascade = CascadeType.REMOVE, fetch = FetchType.LAZY, mappedBy = "user")
+    @OrderBy("dateTime DESC")
+    protected List<UserMeal> meals;
+
     public User() {
     }
 
@@ -117,6 +122,10 @@
 
     public String getPassword() {
         return password;
+    }
+
+    public List<UserMeal> getMeals() {
+        return meals;
     }
 
     @Override
Index: src/main/java/ru/javawebinar/topjava/repository/datajpa/DataJpaUserMealRepositoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/datajpa/DataJpaUserMealRepositoryImpl.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/repository/datajpa/DataJpaUserMealRepositoryImpl.java	(revision )
@@ -50,4 +50,9 @@
     public List<UserMeal> getBetween(LocalDateTime startDate, LocalDateTime endDate, int userId) {
         return proxy.getBetween(startDate, endDate, userId);
     }
+
+    @Override
+    public UserMeal getWithUser(Integer id, Integer userId) {
+        return proxy.getWithUser(id, userId);
+    }
 }
Index: src/main/java/ru/javawebinar/topjava/repository/UserMealRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/UserMealRepository.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/repository/UserMealRepository.java	(revision )
@@ -24,4 +24,8 @@
 
     // ORDERED DATE, TIME
     Collection<UserMeal> getBetween(LocalDateTime startDate, LocalDateTime endDate, int userId);
+
+    default UserMeal getWithUser(Integer id, Integer userId) {
+        throw new UnsupportedOperationException();
+    }
 }
Index: src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserServiceTest.java	(date 1444839009000)
+++ src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserServiceTest.java	(revision )
@@ -1,10 +1,20 @@
 package ru.javawebinar.topjava.service.datajpa;
 
+import org.junit.Test;
 import org.springframework.test.context.ActiveProfiles;
+import ru.javawebinar.topjava.MealTestData;
+import ru.javawebinar.topjava.model.User;
 import ru.javawebinar.topjava.service.AbstractUserServiceTest;
 
 import static ru.javawebinar.topjava.Profiles.DATAJPA;
+import static ru.javawebinar.topjava.UserTestData.*;
 
 @ActiveProfiles({DATAJPA})
 public class DataJpaUserServiceTest extends AbstractUserServiceTest {
+    @Test
+    public void testGetWithUser() throws Exception {
+        User user = service.getWithMeals(USER_ID);
+        MATCHER.assertEquals(USER, user);
+        MealTestData.MATCHER.assertCollectionEquals(MealTestData.USER_MEALS, user.getMeals());
+    }
 }
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/repository/datajpa/DataJpaUserRepositoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/datajpa/DataJpaUserRepositoryImpl.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/repository/datajpa/DataJpaUserRepositoryImpl.java	(revision )
@@ -44,4 +44,9 @@
     public List<User> getAll() {
         return proxy.findAll(SORT_NAME_EMAIL);
     }
+
+    @Override
+    public User getWithMeals(int id) {
+        return proxy.getWithMeals(id);
+    }
 }
Index: src/main/java/ru/javawebinar/topjava/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/service/UserService.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/service/UserService.java	(revision )
@@ -23,6 +23,8 @@
     Collection<User> getAll();
 
     void update(User user) throws NotFoundException;
-    
+
     void evictCache();
+
+    User getWithMeals(int id);
 }
Index: src/main/java/ru/javawebinar/topjava/service/UserMealServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/service/UserMealServiceImpl.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/service/UserMealServiceImpl.java	(revision )
@@ -2,6 +2,7 @@
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import ru.javawebinar.topjava.model.UserMeal;
 import ru.javawebinar.topjava.repository.UserMealRepository;
 import ru.javawebinar.topjava.util.exception.ExceptionUtil;
@@ -47,5 +48,16 @@
     @Override
     public UserMeal save(UserMeal meal, int userId) {
         return repository.save(meal, userId);
+    }
+
+//    @Autowired
+//    private UserRepository userRepository;
+
+    @Transactional
+    public UserMeal getWithUser(Integer id, Integer userId) {
+//        UserMeal meal = get(id, userId);
+//        meal.setUser(userRepository.get(userId));
+//        return meal;
+        return repository.getWithUser(id, userId);
     }
 }
Index: src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserMealServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserMealServiceTest.java	(date 1444839009000)
+++ src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserMealServiceTest.java	(revision )
@@ -1,10 +1,21 @@
 package ru.javawebinar.topjava.service.datajpa;
 
+import org.junit.Test;
 import org.springframework.test.context.ActiveProfiles;
+import ru.javawebinar.topjava.UserTestData;
+import ru.javawebinar.topjava.model.UserMeal;
 import ru.javawebinar.topjava.service.AbstractUserMealServiceTest;
 
+import static ru.javawebinar.topjava.MealTestData.*;
 import static ru.javawebinar.topjava.Profiles.DATAJPA;
+import static ru.javawebinar.topjava.UserTestData.ADMIN_ID;
 
 @ActiveProfiles({DATAJPA})
 public class DataJpaUserMealServiceTest extends AbstractUserMealServiceTest {
+    @Test
+    public void testGetWithUser() throws Exception {
+        UserMeal adminMeal = service.getWithUser(ADMIN_MEAL_ID, ADMIN_ID);
+        MATCHER.assertEquals(ADMIN_MEAL, adminMeal);
+        UserTestData.MATCHER.assertEquals(UserTestData.ADMIN, adminMeal.getUser());
+    }
 }
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/UserRepository.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/repository/UserRepository.java	(revision )
@@ -21,4 +21,8 @@
     User getByEmail(String email);
 
     Collection<User> getAll();
+
+    default User getWithMeals(int id){
+        throw new UnsupportedOperationException();
+    }
 }
Index: src/main/java/ru/javawebinar/topjava/service/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/service/UserServiceImpl.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/service/UserServiceImpl.java	(revision )
@@ -55,4 +55,9 @@
     @Override
     public void evictCache() {
     }
+
+    @Override
+    public User getWithMeals(int id) {
+        return repository.getWithMeals(id);
+    }
 }
Index: src/main/java/ru/javawebinar/topjava/service/UserMealService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/service/UserMealService.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/service/UserMealService.java	(revision )
@@ -27,4 +27,6 @@
     UserMeal update(UserMeal meal, int userId);
 
     UserMeal save(UserMeal meal, int userId);
+
+    UserMeal getWithUser(Integer id, Integer userId);
 }
Index: src/main/java/ru/javawebinar/topjava/repository/datajpa/ProxyUserMealRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/datajpa/ProxyUserMealRepository.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/repository/datajpa/ProxyUserMealRepository.java	(revision )
@@ -34,4 +34,7 @@
 
     @Query("SELECT m from UserMeal m WHERE m.user.id=:userId AND m.dateTime BETWEEN :startDate AND :endDate ORDER BY m.dateTime DESC")
     List<UserMeal> getBetween(@Param("startDate") LocalDateTime startDate, @Param("endDate") LocalDateTime endDate, @Param("userId") int userId);
+
+    @Query("SELECT um FROM UserMeal um JOIN FETCH um.user WHERE um.id = ?1 and um.user.id = ?2 ORDER BY um.dateTime DESC")
+    UserMeal getWithUser(Integer id, Integer userId);
 }
Index: src/main/java/ru/javawebinar/topjava/repository/datajpa/ProxyUserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/datajpa/ProxyUserRepository.java	(date 1444839009000)
+++ src/main/java/ru/javawebinar/topjava/repository/datajpa/ProxyUserRepository.java	(revision )
@@ -34,4 +34,7 @@
     List<User> findAll(Sort sort);
 
     User getByEmail(String email);
+
+    @Query("SELECT u FROM User u JOIN FETCH u.meals WHERE u.id = ?1")
+    User getWithMeals(Integer id);
 }
